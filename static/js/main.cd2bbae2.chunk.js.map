{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","reportWebVitals.js","index.js"],"names":["Form","props","className","onSubmit","submit","type","placeholder","value","onChange","change","Result","weather","err","city","temp","sunrise","sunset","humidity","wind","date","sky","skyicon","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","toFixed","src","alt","APIKey","App","state","handleInputChange","e","setState","target","handleCitySubmit","preventDefault","API","fetch","then","response","ok","Error","json","data","actualdate","toLocaleString","prevState","sys","main","speed","description","icon","catch","console","log","this","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAqBeA,G,YAlBF,SAACC,GACZ,OACE,uBAAMC,UAAU,eAAeC,SAAUF,EAAMG,OAA/C,UAEE,uBACEC,KAAK,OACLH,UAAU,uBACVI,YAAY,aACZC,MAAON,EAAMM,MACbC,SAAUP,EAAMQ,SAElB,wBAAQP,UAAU,oBAAlB,SACE,mBAAGA,UAAU,yBCyDNQ,G,MArEA,SAACT,GAAW,IAAD,EAYpBA,EAAMU,QAVRC,EAFsB,EAEtBA,IACAC,EAHsB,EAGtBA,KACAC,EAJsB,EAItBA,KACAC,EALsB,EAKtBA,QACAC,EANsB,EAMtBA,OACAC,EAPsB,EAOtBA,SACAC,EARsB,EAQtBA,KACAC,EATsB,EAStBA,KACAC,EAVsB,EAUtBA,IACAC,EAXsB,EAWtBA,QAEEC,EAAU,KAEd,IAAKV,GAAOC,EAAM,CAChB,IAAMU,EAAc,IAAIC,KAAe,IAAVT,GAAgBU,qBACvCC,EAAa,IAAIF,KAAc,IAATR,GAAeS,qBAC3CH,EACE,qCACE,qBAAIpB,UAAU,wBAAd,+BAAyDW,KACzD,uBAAMX,UAAU,OAAhB,UACE,sBAAKA,UAAU,2BAAf,UACE,sBAAKA,UAAU,wBAAf,UACGY,EAAKa,UADR,YAGA,sBAAKzB,UAAU,uBAAf,UACE,qBACE0B,IAAG,2CAAsCP,EAAtC,WACHQ,IAAI,eACJ3B,UAAU,0BAEZ,mBAAGA,UAAU,kCAAb,SAAgDkB,UAGpD,sBAAKlB,UAAU,4BAAf,uBAAsDe,EAAtD,OACA,sBAAKf,UAAU,wBAAf,0BACuB,IAAPgB,GAAYS,UAD5B,WAGA,sBAAKzB,UAAU,sBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACE0B,IAAI,yBACJC,IAAI,GACJ3B,UAAU,sBAEXqB,KAEH,sBAAKrB,UAAU,WAAf,UACGwB,EACD,qBACEE,IAAI,wBACJC,IAAI,GACJ3B,UAAU,8BAKlB,qBAAKA,UAAU,iCAAf,SAAiDiB,OAIvD,OACE,qBAAKjB,UAAU,kBAAf,SACGU,EAAG,iCAA6BC,GAASS,MC9D1CQ,EAAS,mCA4GAC,E,4MAzGbC,MAAQ,CACNzB,MAAO,GACPY,KAAM,GACNN,KAAM,GACNE,QAAS,GACTC,OAAQ,GACRF,KAAM,GACNG,SAAU,GACVC,KAAM,GACNE,IAAK,GACLC,QAAS,GACTT,KAAK,G,EAEPqB,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZ5B,MAAO2B,EAAEE,OAAO7B,S,EAuCpB8B,iBAAmB,SAACH,GAClBA,EAAEI,iBACF,IAAMC,EAAG,4DAAwD,EAAKP,MAAMzB,MAAnE,+BAA+FuB,GAExGU,MAAMD,GACHE,MAAK,SAACC,GACL,GAAIA,EAASC,GACX,OAAOD,EAET,MAAME,MAAM,8BAEbH,MAAK,SAACC,GAAD,OAAcA,EAASG,UAC5BJ,MAAK,SAACK,GACL,IAAMC,GAAa,IAAIvB,MAAOwB,iBAC9B,EAAKb,UAAS,SAACc,GAAD,MAAgB,CAC5B9B,KAAM4B,EACNlC,KAAMoC,EAAU1C,MAChBQ,QAAS+B,EAAKI,IAAInC,QAClBC,OAAQ8B,EAAKI,IAAIlC,OACjBF,KAAMgC,EAAKK,KAAKrC,KAChBG,SAAU6B,EAAKK,KAAKlC,SACpBC,KAAM4B,EAAK5B,KAAKkC,MAChBhC,IAAK0B,EAAKnC,QAAQ,GAAG0C,YACrBhC,QAASyB,EAAKnC,QAAQ,GAAG2C,KACzB1C,KAAK,SAGR2C,OAAM,SAAC3C,GACN4C,QAAQC,IAAI7C,GACZ,EAAKuB,UAAS,SAACc,GAAD,MAAgB,CAC5BrC,KAAK,EACLC,KAAMoC,EAAU1C,c,uDAMtB,OACE,sBAAKL,UAAU,eAAf,UACE,oBAAIA,UAAU,sBAAd,0BACA,cAAC,EAAD,CACEK,MAAOmD,KAAK1B,MAAMzB,MAClBE,OAAQiD,KAAKzB,kBACb7B,OAAQsD,KAAKrB,mBAEf,cAAC,EAAD,CAAQ1B,QAAS+C,KAAK1B,e,GApGZ2B,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.cd2bbae2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Form.css\";\r\n\r\nconst Form = (props) => {\r\n  return (\r\n    <form className=\"weather-form\" onSubmit={props.submit}>\r\n      {/* <form className=\"weather-form\"> */}\r\n      <input\r\n        type=\"text\"\r\n        className=\"wheather-form__input\"\r\n        placeholder=\"Write city\"\r\n        value={props.value}\r\n        onChange={props.change}\r\n      />\r\n      <button className=\"weather-form__btn\">\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./Result.css\";\r\n\r\nconst Result = (props) => {\r\n  const {\r\n    err,\r\n    city,\r\n    temp,\r\n    sunrise,\r\n    sunset,\r\n    humidity,\r\n    wind,\r\n    date,\r\n    sky,\r\n    skyicon,\r\n  } = props.weather;\r\n  let content = null;\r\n\r\n  if (!err && city) {\r\n    const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString();\r\n    const sunsetTime = new Date(sunset * 1000).toLocaleTimeString();\r\n    content = (\r\n      <>\r\n        <h2 className=\"weather-result__title\">Actual weather in {city}</h2>\r\n        <main className=\"data\">\r\n          <div className=\"wheather-result__weather\">\r\n            <div className=\"wheather-result__temp\">\r\n              {temp.toFixed()} &#176;C\r\n            </div>\r\n            <div className=\"wheather-result__sky\">\r\n              <img\r\n                src={`http://openweathermap.org/img/wn/${skyicon}@2x.png`}\r\n                alt=\"weather-icon\"\r\n                className=\"wheather-result__icon\"\r\n              />\r\n              <p className=\"weather-result__sky-description\">{sky}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"wheather-result__humidity\">Humidity: {humidity}%</div>\r\n          <div className=\"wheather-result__wind\">\r\n            Wind speed: {(wind * 3.6).toFixed()} km/h\r\n          </div>\r\n          <div className=\"weather-result__sun\">\r\n            <div className=\"sun-rise\">\r\n              <img\r\n                src=\"./pictures/sunrise.png\"\r\n                alt=\"\"\r\n                className=\"sun-rise__picture\"\r\n              />\r\n              {sunriseTime}\r\n            </div>\r\n            <div className=\"sun-down\">\r\n              {sunsetTime}\r\n              <img\r\n                src=\"./pictures/sunset.png\"\r\n                alt=\"\"\r\n                className=\"sun-set__picture\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <div className=\"wheather-result__actualization\">{date}</div>\r\n      </>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"wheather-result\">\r\n      {err ? `There is no city named ${city}` : content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Form from \"./Form\";\r\nimport Result from \"./Result\";\r\n\r\nconst APIKey = \"2c05a0306a2568967046aa8d9eb7438a\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n    date: \"\",\r\n    city: \"\",\r\n    sunrise: \"\",\r\n    sunset: \"\",\r\n    temp: \"\",\r\n    humidity: \"\",\r\n    wind: \"\",\r\n    sky: \"\",\r\n    skyicon: \"\",\r\n    err: false,\r\n  };\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n  // ONLINE SEARCH APLICATION\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (this.state.value.length < 5) return;\r\n  //   if (prevState.value !== this.state.value) {\r\n  //     const API = `api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}`;\r\n\r\n  //     fetch(API)\r\n  //       .then((response) => {\r\n  //         if (response.ok) {\r\n  //           return response;\r\n  //         }\r\n  //         throw Error(\"Coudn't found this city\");\r\n  //       })\r\n  //       .then((response) => response.json())\r\n  //       .then((data) => {\r\n  //         const actualdate = new Date().toLocaleString();\r\n  //         this.setState((prevState) => ({\r\n  //           date: actualdate,\r\n  //           city: prevState.value,\r\n  //           sunrise: data.sys.sunrise,\r\n  //           sunset: data.sys.sunset,\r\n  //           temp: data.main.temp,\r\n  //           humidity: data.main.humadity,\r\n  //           wind: data.wind.speed,\r\n  //           err: false,\r\n  //         }));\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         this.setState((prevState) => ({\r\n  //           err: true,\r\n  //           city: prevState.value,\r\n  //         }));\r\n  //       });\r\n  //   }\r\n  // }\r\n  // FORM SEARCH\r\n  handleCitySubmit = (e) => {\r\n    e.preventDefault();\r\n    const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&units=metric&appid=${APIKey}`;\r\n\r\n    fetch(API)\r\n      .then((response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        }\r\n        throw Error(\"Coudn't found this city\");\r\n      })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const actualdate = new Date().toLocaleString();\r\n        this.setState((prevState) => ({\r\n          date: actualdate,\r\n          city: prevState.value,\r\n          sunrise: data.sys.sunrise,\r\n          sunset: data.sys.sunset,\r\n          temp: data.main.temp,\r\n          humidity: data.main.humidity,\r\n          wind: data.wind.speed,\r\n          sky: data.weather[0].description,\r\n          skyicon: data.weather[0].icon,\r\n          err: false,\r\n        }));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState((prevState) => ({\r\n          err: true,\r\n          city: prevState.value,\r\n        }));\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wheather-app\">\r\n        <h1 className=\"wheather-app__title\">Wheather App</h1>\r\n        <Form\r\n          value={this.state.value}\r\n          change={this.handleInputChange}\r\n          submit={this.handleCitySubmit}\r\n        />\r\n        <Result weather={this.state} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}